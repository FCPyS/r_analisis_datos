[
  {
    "objectID": "P5.html#datos",
    "href": "P5.html#datos",
    "title": "5  Ponderación y otros",
    "section": "5.1 Datos",
    "text": "5.1 Datos\nE importamos la base\n\nconcentradohogar &lt;- haven::read_dta(\"datos/concentradohogar.dta\") \n\nTambién importemos la base de población\n\npoblacion &lt;- haven::read_sav(\"datos/poblacion.sav\")  \n\n\n5.1.1 Recordemos nuestro etiquetado\n\netiqueta_sex&lt;-c(\"Hombre\", \"Mujer\")\n\nconcentradohogar&lt;-concentradohogar %&gt;% \n  mutate(sexo_jefe=as.numeric(sexo_jefe)) %&gt;% # para quitar el \"string\"\n  sjlabelled::set_labels(sexo_jefe, labels=etiqueta_sex) \n\n\nconcentradohogar&lt;-concentradohogar %&gt;% \n  mutate(clase_hog=as.numeric(clase_hog)) %&gt;% # para quitar el \"string\"\n  sjlabelled::set_labels(clase_hog, labels=c(\"unipersonal\",\n                                             \"nuclear\", \n                                             \"ampliado\",\n                                             \"compuesto\",\n                                             \"corresidente\")) \n\nCon “tabyl()”” de “janitor””\n\nconcentradohogar %&gt;%\n  dplyr::mutate(sexo_jefe=as_label(sexo_jefe))  %&gt;%\n  janitor::tabyl(sexo_jefe)\n\n sexo_jefe     n   percent\n    Hombre 61905 0.6870547\n     Mujer 28197 0.3129453"
  },
  {
    "objectID": "P5.html#factores-de-expansión-y-algunas-otras-medidas",
    "href": "P5.html#factores-de-expansión-y-algunas-otras-medidas",
    "title": "5  Ponderación y otros",
    "section": "5.2 Factores de expansión y algunas otras medidas",
    "text": "5.2 Factores de expansión y algunas otras medidas\n\n5.2.1 La función tally()\nEl comando tabyl() del paquete {janitor} es muy útil pero no es compatible con los factores del expansión. En realidad, tabyl() nos ahorra un poco el hecho de tener que agrupar nuestra base en categorías y luego hacer un conteo para cada una de ellas. tally() es un comando que nos hace ese conteo y group_by() nos agrupa las observaciones de nuestra base de datos para hacer cualquier operación.\n\nconcentradohogar %&gt;% \n group_by(as_label(sexo_jefe)) %&gt;% \n  tally(factor) %&gt;% #nombre del factor\n  adorn_totals()  # Agrega total\n\n as_label(sexo_jefe)        n\n              Hombre 25397559\n               Mujer 12162564\n               Total 37560123\n\n\nPodemos usar funciones de adorns... de `{janitor}\n\nconcentradohogar %&gt;% \n group_by(as_label(sexo_jefe)) %&gt;% \n  tally(factor) %&gt;% #nombre del factor\n  adorn_totals() %&gt;% # Agrega total\n  adorn_percentages(\"all\")  %&gt;% \n  adorn_pct_formatting()\n\n as_label(sexo_jefe)      n\n              Hombre  67.6%\n               Mujer  32.4%\n               Total 100.0%\n\n\n\n\n5.2.2 Con dplyr::count()\nLa función count() también permite dar pesos a la operaciones de frecuencias, con el argumento wt =\n\nconcentradohogar %&gt;% \n  count(sexo_jefe, clase_hog,  wt = factor) \n\n# A tibble: 10 × 3\n   sexo_jefe clase_hog        n\n       &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt;\n 1         1         1  2560548\n 2         1         2 17303329\n 3         1         3  5324985\n 4         1         4   132517\n 5         1         5    76180\n 6         2         1  2316541\n 7         2         2  5769256\n 8         2         3  3932043\n 9         2         4    96921\n10         2         5    47803\n\n\nEs compatible con etiquetas\n\nconcentradohogar %&gt;% \n  count(as_label(sexo_jefe), as_label(clase_hog),  wt = factor) \n\n# A tibble: 10 × 3\n   `as_label(sexo_jefe)` `as_label(clase_hog)`        n\n   &lt;fct&gt;                 &lt;fct&gt;                    &lt;dbl&gt;\n 1 Hombre                unipersonal            2560548\n 2 Hombre                nuclear               17303329\n 3 Hombre                ampliado               5324985\n 4 Hombre                compuesto               132517\n 5 Hombre                corresidente             76180\n 6 Mujer                 unipersonal            2316541\n 7 Mujer                 nuclear                5769256\n 8 Mujer                 ampliado               3932043\n 9 Mujer                 compuesto                96921\n10 Mujer                 corresidente             47803\n\n\n\n\n5.2.3 con {pollster}\nPara una variable\n\n# tabulado simple con factor de expansión\n\nconcentradohogar %&gt;% \n  dplyr::mutate(sexo_jefe = sjlabelled::as_label(sexo_jefe)) %&gt;% \n  pollster::topline(sexo_jefe , weight = factor)\n\n# A tibble: 2 × 5\n  Response Frequency Percent `Valid Percent` `Cumulative Percent`\n  &lt;fct&gt;        &lt;dbl&gt;   &lt;dbl&gt;           &lt;dbl&gt;                &lt;dbl&gt;\n1 Hombre    25397559    67.6            67.6                 67.6\n2 Mujer     12162564    32.4            32.4                100  \n\n\nPara dos variables\n\n# tabulado simple con factor de expansión\n\nconcentradohogar %&gt;% \n  dplyr::mutate(sexo_jefe = sjlabelled::as_label(sexo_jefe)) %&gt;% \n  dplyr::mutate(clase_hog = sjlabelled::as_label(clase_hog)) %&gt;% \n  pollster::crosstab(sexo_jefe, clase_hog, weight = factor)\n\n# A tibble: 2 × 7\n  sexo_jefe unipersonal nuclear ampliado compuesto corresidente        n\n  &lt;fct&gt;           &lt;dbl&gt;   &lt;dbl&gt;    &lt;dbl&gt;     &lt;dbl&gt;        &lt;dbl&gt;    &lt;dbl&gt;\n1 Hombre           10.1    68.1     21.0     0.522        0.300 25397559\n2 Mujer            19.0    47.4     32.3     0.797        0.393 12162564"
  },
  {
    "objectID": "P5.html#diseño-complejo",
    "href": "P5.html#diseño-complejo",
    "title": "5  Ponderación y otros",
    "section": "5.3 Diseño complejo",
    "text": "5.3 Diseño complejo\nHay muchos diseños muestrales, asumiremos el diseño simple, pero hay que revisar la documentación de la base\n\n# Muestreo aleatorio\nconcentradohogar_srvy &lt;- concentradohogar %&gt;%\n  as_survey_design(weights = factor)\n\nSi revisamos las encuestas tiene un diseño complejo, hay estratos y unidades primarias de muestreo\n\n# Muestreo estratificado\nconcentradohogar_srvy &lt;- concentradohogar %&gt;%\n  as_survey_design(\n    upm = upm,\n    strata = est_dis,\n    weights = factor,\n    nest = TRUE)\n\nComo vemos esto es un archivo bien grande, por lo que mejor vamos a seleccionar un par de variables:\n\n# simple random sample\nconcentradohogar_srvy &lt;- concentradohogar %&gt;%\n  select(upm, est_dis, factor, clase_hog,\n         sexo_jefe, edad_jefe, educa_jefe,ing_cor, factor) %&gt;% \n  as_survey_design(\n    upm=upm,\n    strata = est_dis,\n    weights = factor,\n    nest = TRUE)\n\nPara una media ponderada\n\nconcentradohogar_srvy %&gt;%\n  filter(ing_cor&gt;0) %&gt;% # sólo con ingresos\n  summarise(\n    media_ponderada = survey_mean(ing_cor, na.rm=T))\n\n# A tibble: 1 × 2\n  media_ponderada media_ponderada_se\n            &lt;dbl&gt;              &lt;dbl&gt;\n1          63708.               321.\n\n\nSi queremos los intervalos de confianza (spoiler):\n\nconcentradohogar_srvy %&gt;%\n  summarize(\n    media_ponderada = survey_mean(ing_cor,\n                                  vartype = \"ci\") )\n\n# A tibble: 1 × 3\n  media_ponderada media_ponderada_low media_ponderada_upp\n            &lt;dbl&gt;               &lt;dbl&gt;               &lt;dbl&gt;\n1          63695.              63067.              64324.\n\n\n\nconcentradohogar_srvy %&gt;%\n  summarize(\n    mediana_ponderada = survey_median(ing_cor,\n                                  vartype = \"ci\") )\n\n# A tibble: 1 × 3\n  mediana_ponderada mediana_ponderada_low mediana_ponderada_upp\n              &lt;dbl&gt;                 &lt;dbl&gt;                 &lt;dbl&gt;\n1            47329.                46978.                47693.\n\n\n\nconcentradohogar_srvy %&gt;%\n  mutate(sexo_jefe=as_label(sexo_jefe)) %&gt;% \n  group_by(sexo_jefe) %&gt;% #variables cuali\n  summarize(proportion = survey_mean(), # proporción\n            total = survey_total() ) # totales\n\n# A tibble: 2 × 5\n  sexo_jefe proportion proportion_se    total total_se\n  &lt;fct&gt;          &lt;dbl&gt;         &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;\n1 Hombre         0.676       0.00221 25397559   85407.\n2 Mujer          0.324       0.00221 12162564   83300."
  },
  {
    "objectID": "P5.html#creación-de-intervalos-con-cortes",
    "href": "P5.html#creación-de-intervalos-con-cortes",
    "title": "5  Ponderación y otros",
    "section": "5.4 Creación de intervalos con cortes",
    "text": "5.4 Creación de intervalos con cortes\nUno de los elementos más comunes es crear grupos. Por ejemplo, la función cut(), nos ayuda a crear variables con ciertos cortes. Por ejemplo, para recodificar por grupos etarios\n\nconcentradohogar %&lt;&gt;% \n  mutate(grupo=cut(edad_jefe,\n                   breaks=c(0, 25, 50, 75, 100)))\n  \n       \nconcentradohogar %&gt;% \n  tabyl(grupo)\n\n    grupo     n      percent valid_percent\n   (0,25]  3297 0.0365918626    0.03659633\n  (25,50] 42220 0.4685800537    0.46863727\n  (50,75] 37664 0.4180151384    0.41806618\n (75,100]  6910 0.0766908615    0.07670023\n     &lt;NA&gt;    11 0.0001220839            NA\n\n\nAlgunas opciones se pueden modificar dentro de la función cut()\n\nconcentradohogar %&lt;&gt;% \n  mutate(grupo=cut(edad_jefe,\n                   breaks=c(0, 25, 50, 75, 100),\n                   include.lowest=T,\n                   right= F))\n  \n       \nconcentradohogar %&gt;% \n  tabyl(grupo)\n\n    grupo     n      percent valid_percent\n   [0,25)  2503 0.0277796275    0.02778302\n  [25,50) 40578 0.4503562629    0.45041125\n  [50,75) 39197 0.4350291891    0.43508231\n [75,100]  7813 0.0867128366    0.08672342\n     &lt;NA&gt;    11 0.0001220839            NA\n\n\nEsto nos puede ayudar para hacer variables de rangos de cualquier tipo."
  },
  {
    "objectID": "P5.html#selecciones-y-filtros-avanzados",
    "href": "P5.html#selecciones-y-filtros-avanzados",
    "title": "5  Ponderación y otros",
    "section": "5.5 Selecciones y filtros avanzados",
    "text": "5.5 Selecciones y filtros avanzados\nEn prácticas pasadas ya revisamos las selecciones y los filtros pero avanzaremos.\n\n5.5.1 Selecciones con “ayudadores” y Wildcards\nTenemos a veces variables que inician o terminan igual porque son parte de una sección, podemos elegir las variables de esa forma:\n\nconcentradohogar %&gt;% \n  select(starts_with(\"ing\"))\n\n# A tibble: 90,102 × 2\n   ing_cor ingtrab\n     &lt;dbl&gt;   &lt;dbl&gt;\n 1  56124.  35707.\n 2 108049.  66766.\n 3 133853.  93082.\n 4 105054.      0 \n 5  24212.  22255.\n 6 121650.  40255.\n 7  60261.  33359.\n 8  95978.      0 \n 9 158399.  80951.\n10  61343.  31182.\n# ℹ 90,092 more rows\n\n\nQue tenga la cadena en cualquier parte del nombre\n\nconcentradohogar %&gt;% \n  select(matches(\"ing\"))\n\n# A tibble: 90,102 × 4\n   percep_ing ing_cor ingtrab otros_ing\n        &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;     &lt;dbl&gt;\n 1          3  56124.  35707.         0\n 2          2 108049.  66766.         0\n 3          2 133853.  93082.         0\n 4          2 105054.      0          0\n 5          1  24212.  22255.         0\n 6          4 121650.  40255.         0\n 7          2  60261.  33359.         0\n 8          1  95978.      0          0\n 9          3 158399.  80951.         0\n10          2  61343.  31182.         0\n# ℹ 90,092 more rows\n\n\nQue tenga la cadena en la parte final\n\nconcentradohogar %&gt;% \n  select(matches(\"hog\"))\n\n# A tibble: 90,102 × 4\n   foliohog clase_hog transf_hog ero_nm_hog\n   &lt;chr&gt;        &lt;dbl&gt;      &lt;dbl&gt;      &lt;dbl&gt;\n 1 1                3         0          0 \n 2 1                2      9000.         0 \n 3 1                2         0          0 \n 4 1                3         0          0 \n 5 2                1         0       3214.\n 6 1                2         0          0 \n 7 1                2         0          0 \n 8 1                1      2443.         0 \n 9 1                2         0          0 \n10 1                2      1286.         0 \n# ℹ 90,092 more rows\n\n\n\n\n5.5.2 Filtros con %in% y operadores de negación\nSi queremos seleccionar varios elementos en un solo comando, podemos utilizar %in% seguido de un vector de las opciones a señalar.\nSupongamos que nos queremos quedar con los datos de dos entidades. Con esta excusa también aprenderemos a usar una función para extraer de las cadenas\n\nconcentradohogar %&lt;&gt;% \n  mutate(ent=stringr::str_sub(folioviv, start=1, end=2 ))\n\nMás del paquete {stringr} aquí\n\nconcentradohogar %&gt;% \n  filter(ent%in%c(\"09\", \"15\"))\n\n# A tibble: 6,112 × 128\n   folioviv  foliohog ubica_geo tam_loc est_socio est_dis upm   factor clase_hog\n   &lt;chr&gt;     &lt;chr&gt;    &lt;chr&gt;     &lt;chr&gt;   &lt;chr&gt;     &lt;chr&gt;   &lt;chr&gt;  &lt;dbl&gt;     &lt;dbl&gt;\n 1 09000069… 1        09002     1       3         141     0003…   1578         3\n 2 09000069… 1        09002     1       3         141     0003…   1578         2\n 3 09000069… 1        09002     1       3         141     0003…   1578         3\n 4 09000069… 1        09002     1       3         141     0003…   1578         3\n 5 09000069… 1        09002     1       3         141     0003…   1578         3\n 6 09000069… 1        09002     1       3         141     0003…   1578         2\n 7 09000092… 1        09002     1       3         141     0003…   1474         2\n 8 09000092… 1        09002     1       3         141     0003…   1474         3\n 9 09000092… 1        09002     1       3         141     0003…   1474         1\n10 09000092… 1        09002     1       3         141     0003…   1474         2\n# ℹ 6,102 more rows\n# ℹ 119 more variables: sexo_jefe &lt;dbl&gt;, edad_jefe &lt;dbl&gt;, educa_jefe &lt;chr&gt;,\n#   tot_integ &lt;dbl&gt;, hombres &lt;dbl&gt;, mujeres &lt;dbl&gt;, mayores &lt;dbl&gt;,\n#   menores &lt;dbl&gt;, p12_64 &lt;dbl&gt;, p65mas &lt;dbl&gt;, ocupados &lt;dbl&gt;,\n#   percep_ing &lt;dbl&gt;, perc_ocupa &lt;dbl&gt;, ing_cor &lt;dbl&gt;, ingtrab &lt;dbl&gt;,\n#   trabajo &lt;dbl&gt;, sueldos &lt;dbl&gt;, horas_extr &lt;dbl&gt;, comisiones &lt;dbl&gt;,\n#   aguinaldo &lt;dbl&gt;, indemtrab &lt;dbl&gt;, otra_rem &lt;dbl&gt;, remu_espec &lt;dbl&gt;, …\n\n\nSi queremos negar esta relación o casi cualquier otro filtro:\n\nconcentradohogar %&gt;% \n  filter(!ent%in%c(\"09\", \"15\"))\n\n# A tibble: 83,990 × 128\n   folioviv  foliohog ubica_geo tam_loc est_socio est_dis upm   factor clase_hog\n   &lt;chr&gt;     &lt;chr&gt;    &lt;chr&gt;     &lt;chr&gt;   &lt;chr&gt;     &lt;chr&gt;   &lt;chr&gt;  &lt;dbl&gt;     &lt;dbl&gt;\n 1 01000050… 1        01001     1       4         003     0000…    206         3\n 2 01000050… 1        01001     1       4         003     0000…    206         2\n 3 01000050… 1        01001     1       4         003     0000…    206         2\n 4 01000120… 1        01001     1       3         002     0000…    167         3\n 5 01000120… 2        01001     1       3         002     0000…    167         1\n 6 01000120… 1        01001     1       3         002     0000…    167         2\n 7 01000120… 1        01001     1       3         002     0000…    167         2\n 8 01000193… 1        01001     1       4         003     0000…    212         1\n 9 01000193… 1        01001     1       4         003     0000…    212         2\n10 01000193… 1        01001     1       4         003     0000…    212         2\n# ℹ 83,980 more rows\n# ℹ 119 more variables: sexo_jefe &lt;dbl&gt;, edad_jefe &lt;dbl&gt;, educa_jefe &lt;chr&gt;,\n#   tot_integ &lt;dbl&gt;, hombres &lt;dbl&gt;, mujeres &lt;dbl&gt;, mayores &lt;dbl&gt;,\n#   menores &lt;dbl&gt;, p12_64 &lt;dbl&gt;, p65mas &lt;dbl&gt;, ocupados &lt;dbl&gt;,\n#   percep_ing &lt;dbl&gt;, perc_ocupa &lt;dbl&gt;, ing_cor &lt;dbl&gt;, ingtrab &lt;dbl&gt;,\n#   trabajo &lt;dbl&gt;, sueldos &lt;dbl&gt;, horas_extr &lt;dbl&gt;, comisiones &lt;dbl&gt;,\n#   aguinaldo &lt;dbl&gt;, indemtrab &lt;dbl&gt;, otra_rem &lt;dbl&gt;, remu_espec &lt;dbl&gt;, …"
  },
  {
    "objectID": "P5.html#agregados",
    "href": "P5.html#agregados",
    "title": "5  Ponderación y otros",
    "section": "5.6 Agregados",
    "text": "5.6 Agregados\n\n5.6.1 Agregados como nuevo dataframe\nEl paquete {collapse} tiene muchas funciones para agregar datos. Esta es una operación que puede ser útil cuando queremos pasar de unidades más pequeñas a más grandes.\nSupongamos que necesitamos el total de personas mayores de 64 en cada hogar para pegárselo al concentrado:\n\npoblacion %&gt;% \n  mutate(p65m=edad&gt;64) %&gt;% \n  select(folioviv, foliohog, p65m) %&gt;% \n  group_by(folioviv, foliohog) %&gt;% \n  collapse::fsum() -&gt;p65m_hog\n\nfsum() permite utilizar pesos y además hará la suma para cualquier variable. Por ejemplo podríamos dejar crear una variable para el tamaño del hogar\n\npoblacion %&gt;% \n  mutate(p65m=edad&gt;64) %&gt;% \n  mutate(residente=1) %&gt;% \n  select(folioviv, foliohog, p65m, residente) %&gt;% \n  group_by(folioviv, foliohog) %&gt;% \n  collapse::fsum() -&gt;pob_hog\n\nTambién hay otros comandos para hacer promedios y más\n\npoblacion %&gt;% \n  select(folioviv, foliohog, edad, ) %&gt;% \n  group_by(folioviv, foliohog) %&gt;% \n  collapse::fmean() -&gt;eda_hog\n\n\n\n5.6.2 Agregados dentro del mismo dataframe\nEn sociodemografía es muy muy común que nos importen algunas condiciones e interrelaciones entre los miembros de un hogar. Entonces a veces estudiamos los atributos del hogar como variables de cada individuo, por lo que necesitamos que estén en la misma base.\nPodríamos hacer el merge de los dataframes creados en el apartado anterior y los de población, pero también podemos hacer los estimados dentro de la misma base, así que crearemos variables nuevas\n\npoblacion %&lt;&gt;% \n  group_by(folioviv, foliohog) %&gt;% \n  mutate(mean_edad=mean(edad)) %&gt;% \n  ungroup() # esto es importante\n\nEquivalente\n\npoblacion %&lt;&gt;% \n  mutate(mean_edad=mean(edad), .by= c(folioviv, foliohog))\n\nEl puntito en .by es fundamental, sin eso queda agrupado\nPodemos hacer también más operaciones\n\npoblacion %&lt;&gt;% \n  group_by(folioviv, foliohog) %&gt;% \n  mutate(mean_edad=mean(edad)) %&gt;% \n  ungroup()"
  },
  {
    "objectID": "P5.html#creación-de-quintiles",
    "href": "P5.html#creación-de-quintiles",
    "title": "5  Ponderación y otros",
    "section": "5.7 Creación de quintiles",
    "text": "5.7 Creación de quintiles\nOtro tipo de variables de intervalos muy importante son los quintiles y otras medidas de posición.\n\nconcentradohogar %&lt;&gt;%\n  mutate(quintil0=ntile(ing_cor, n=5))\n\nconcentradohogar %&gt;% \n  tabyl(quintil0)\n\n quintil0     n   percent\n        1 18021 0.2000067\n        2 18021 0.2000067\n        3 18020 0.1999956\n        4 18020 0.1999956\n        5 18020 0.1999956\n\n\nPero quizás nos interesa más los quintiles que toman en cuenta el factor de expansión, por eso usamos el paquete {dineq}\n\nconcentradohogar %&lt;&gt;%\n  mutate(quintil1=dineq::ntiles.wtd(ing_cor, # variable a utilizar\n                                    n=5, # número de grupos equitativos\n                                    weights=factor)) # factor\n\nconcentradohogar %&gt;% \n  tabyl(quintil1)\n\n quintil1     n   percent\n        1 19000 0.2108721\n        2 18418 0.2044128\n        3 17933 0.1990300\n        4 17744 0.1969324\n        5 17007 0.1887527\n\nconcentradohogar %&gt;% \n  count(quintil1, wt=factor) %&gt;% \n  mutate(p=n/sum(n)*100) %&gt;%\n  adorn_totals()\n\n quintil1        n         p\n        1  7512196  20.00046\n        2  7512080  20.00015\n        3  7512216  20.00051\n        4  7511606  19.99889\n        5  7512025  20.00000\n    Total 37560123 100.00000\n\n\nPodemos también ver la diferencia en los máximos y mínimos de ambas variables\n\nconcentradohogar %&gt;% \n  group_by(quintil0) %&gt;% \n  summarise(min=min(ing_cor),\n            max=max(ing_cor))\n\n# A tibble: 5 × 3\n  quintil0    min      max\n     &lt;int&gt;  &lt;dbl&gt;    &lt;dbl&gt;\n1        1     0    25159.\n2        2 25159.   38361.\n3        3 38361.   55235.\n4        4 55235.   83845.\n5        5 83850. 7153770.\n\n\nVeamos con la ponderación:\n\nconcentradohogar %&gt;% \n  group_by(quintil1) %&gt;% \n  summarise(min=min(ing_cor),\n            max=max(ing_cor))\n\n# A tibble: 5 × 3\n  quintil1    min      max\n     &lt;dbl&gt;  &lt;dbl&gt;    &lt;dbl&gt;\n1        1     0    25883.\n2        2 25883.   39448.\n3        3 39448.   56680.\n4        4 56681.   86372.\n5        5 86373. 7153770.\n\n\nLa flexibilidad de dplyr nos permite además hacer quintiles fácilmente adentro de grupos. Por ejemplo si quisiéramos hacer quintiles estatales… Claro para eso debemos tener la variable.\nLa variable “ubica_geo”, nos da esa información pero junta\n\nconcentradohogar %&gt;% \n  select(ubica_geo) %&gt;% \n  head\n\n# A tibble: 6 × 1\n  ubica_geo\n  &lt;chr&gt;    \n1 01001    \n2 01001    \n3 01001    \n4 01001    \n5 01001    \n6 01001    \n\n\nVamos a crear dos variables, uan que nos diga la entidad y la otra el municipio\n\nconcentradohogar %&lt;&gt;%\n  mutate(ent=stringr::str_sub(ubica_geo, start = 1, end = 2)) %&gt;% \n  mutate(mun=stringr::str_sub(ubica_geo, start = 3, end = 5))\n\nconcentradohogar %&gt;% tabyl(ent)\n\n ent    n    percent\n  01 2669 0.02962198\n  02 4141 0.04595902\n  03 2776 0.03080953\n  04 2204 0.02446117\n  05 4125 0.04578145\n  06 3031 0.03363965\n  07 2112 0.02344010\n  08 4555 0.05055382\n  09 2585 0.02868971\n  10 2713 0.03011032\n  11 3076 0.03413909\n  12 2538 0.02816808\n  13 2135 0.02369537\n  14 2625 0.02913365\n  15 3527 0.03914453\n  16 2215 0.02458325\n  17 2461 0.02731349\n  18 2130 0.02363987\n  19 3612 0.04008790\n  20 2620 0.02907816\n  21 2175 0.02413931\n  22 3822 0.04241859\n  23 2418 0.02683625\n  24 2630 0.02918914\n  25 3479 0.03861180\n  26 2548 0.02827906\n  27 2167 0.02405052\n  28 2322 0.02577079\n  29 2307 0.02560432\n  30 2915 0.03235222\n  31 2947 0.03270738\n  32 2522 0.02799050\n\nconcentradohogar %&gt;% tabyl(mun)\n\n mun    n      percent\n 001 5079 5.636945e-02\n 002 4679 5.193003e-02\n 003 3080 3.418348e-02\n 004 3700 4.106457e-02\n 005 3685 4.089809e-02\n 006 2928 3.249650e-02\n 007 2792 3.098710e-02\n 008 2300 2.552663e-02\n 009 1987 2.205278e-02\n 010 2043 2.267430e-02\n 011 1998 2.217487e-02\n 012 1787 1.983308e-02\n 013 1356 1.504961e-02\n 014 2375 2.635902e-02\n 015 1062 1.178664e-02\n 016 1183 1.312956e-02\n 017 2600 2.885619e-02\n 018 1659 1.841247e-02\n 019 1466 1.627045e-02\n 020 1387 1.539366e-02\n 021  847 9.400457e-03\n 022  611 6.781204e-03\n 023  423 4.694679e-03\n 024  630 6.992076e-03\n 025  641 7.114160e-03\n 026  697 7.735677e-03\n 027  803 8.912122e-03\n 028 1075 1.193092e-02\n 029  703 7.802269e-03\n 030 1916 2.126479e-02\n 031  749 8.312801e-03\n 032  886 9.833300e-03\n 033 1366 1.516060e-02\n 034  450 4.994340e-03\n 035 1466 1.627045e-02\n 036  392 4.350625e-03\n 037 1694 1.880091e-02\n 038  947 1.051031e-02\n 039 1405 1.559344e-02\n 040  491 5.449380e-03\n 041  754 8.368294e-03\n 042  424 4.705778e-03\n 043  469 5.205212e-03\n 044  307 3.407250e-03\n 045  339 3.762403e-03\n 046  508 5.638055e-03\n 047  200 2.219707e-03\n 048  623 6.914386e-03\n 049  221 2.452776e-03\n 050 1293 1.435040e-02\n 051  447 4.961044e-03\n 052  534 5.926617e-03\n 053  830 9.211782e-03\n 054  310 3.440545e-03\n 055  438 4.861157e-03\n 056  356 3.951078e-03\n 057  275 3.052097e-03\n 058  386 4.284034e-03\n 059  292 3.240772e-03\n 060   88 9.766709e-04\n 061  176 1.953342e-03\n 062  258 2.863421e-03\n 063   84 9.322768e-04\n 064  103 1.143149e-03\n 065  154 1.709174e-03\n 066  156 1.731371e-03\n 067  355 3.939979e-03\n 068  217 2.408382e-03\n 069  118 1.309627e-03\n 070  106 1.176444e-03\n 071  123 1.365120e-03\n 072   83 9.211782e-04\n 073  185 2.053229e-03\n 074   72 7.990944e-04\n 075  195 2.164214e-03\n 076  221 2.452776e-03\n 077  220 2.441677e-03\n 078  148 1.642583e-03\n 079  187 2.075426e-03\n 080  106 1.176444e-03\n 081  199 2.208608e-03\n 082  103 1.143149e-03\n 083  110 1.220839e-03\n 084   87 9.655724e-04\n 085  186 2.064327e-03\n 086  109 1.209740e-03\n 087  212 2.352889e-03\n 088  103 1.143149e-03\n 089  244 2.708042e-03\n 090  129 1.431711e-03\n 091   28 3.107589e-04\n 092   58 6.437149e-04\n 093   85 9.433753e-04\n 094   95 1.054361e-03\n 095    9 9.988679e-05\n 096  122 1.354021e-03\n 097  263 2.918914e-03\n 098  268 2.974407e-03\n 099   93 1.032164e-03\n 100   60 6.659120e-04\n 101  489 5.427183e-03\n 102  384 4.261837e-03\n 103   87 9.655724e-04\n 104  230 2.552663e-03\n 105   59 6.548134e-04\n 106  271 3.007702e-03\n 107   73 8.101929e-04\n 108  301 3.340658e-03\n 109  166 1.842356e-03\n 110   36 3.995472e-04\n 111   34 3.773501e-04\n 112  127 1.409514e-03\n 113   84 9.322768e-04\n 114  553 6.137489e-03\n 115   13 1.442809e-04\n 116   39 4.328428e-04\n 117   62 6.881090e-04\n 118   70 7.768973e-04\n 119   65 7.214046e-04\n 120  366 4.062063e-03\n 121  160 1.775765e-03\n 122   51 5.660252e-04\n 123  108 1.198642e-03\n 124   84 9.322768e-04\n 125   40 4.439413e-04\n 128   41 4.550398e-04\n 130   26 2.885619e-04\n 131   54 5.993208e-04\n 132  123 1.365120e-03\n 133    6 6.659120e-05\n 134   21 2.330692e-04\n 135   32 3.551530e-04\n 136   30 3.329560e-04\n 138   41 4.550398e-04\n 140    8 8.878826e-05\n 141   61 6.770105e-04\n 142   45 4.994340e-04\n 144   17 1.886751e-04\n 145   20 2.219707e-04\n 146   20 2.219707e-04\n 148   62 6.881090e-04\n 149   66 7.325032e-04\n 152   23 2.552663e-04\n 153   39 4.328428e-04\n 154   21 2.330692e-04\n 155   40 4.439413e-04\n 156   96 1.065459e-03\n 157   24 2.663648e-04\n 159   17 1.886751e-04\n 160   61 6.770105e-04\n 161   90 9.988679e-04\n 162   21 2.330692e-04\n 163   60 6.659120e-04\n 164   64 7.103061e-04\n 166   18 1.997736e-04\n 167   18 1.997736e-04\n 171   20 2.219707e-04\n 172   42 4.661384e-04\n 174  140 1.553795e-03\n 175   61 6.770105e-04\n 176   18 1.997736e-04\n 177   25 2.774633e-04\n 179   23 2.552663e-04\n 181   20 2.219707e-04\n 183   66 7.325032e-04\n 184  109 1.209740e-03\n 186   41 4.550398e-04\n 188   23 2.552663e-04\n 189   71 7.879958e-04\n 193  183 2.031031e-03\n 194   23 2.552663e-04\n 195   19 2.108721e-04\n 197   63 6.992076e-04\n 198   38 4.217442e-04\n 199   20 2.219707e-04\n 201   65 7.214046e-04\n 202   39 4.328428e-04\n 204   21 2.330692e-04\n 205   42 4.661384e-04\n 206   17 1.886751e-04\n 207   20 2.219707e-04\n 208   58 6.437149e-04\n 211   21 2.330692e-04\n 213   21 2.330692e-04\n 216   23 2.552663e-04\n 232   45 4.994340e-04\n 276   21 2.330692e-04\n 277   18 1.997736e-04\n 278   20 2.219707e-04\n 280   22 2.441677e-04\n 288   22 2.441677e-04\n 291   23 2.552663e-04\n 293    9 9.988679e-05\n 307   21 2.330692e-04\n 309   22 2.441677e-04\n 311   23 2.552663e-04\n 318   20 2.219707e-04\n 321   19 2.108721e-04\n 324   78 8.656856e-04\n 327   59 6.548134e-04\n 334   38 4.217442e-04\n 350    9 9.988679e-05\n 364   23 2.552663e-04\n 375    5 5.549266e-05\n 385   31 3.440545e-04\n 390   33 3.662516e-04\n 397   18 1.997736e-04\n 399    5 5.549266e-05\n 407   23 2.552663e-04\n 409    4 4.439413e-05\n 412   21 2.330692e-04\n 413   22 2.441677e-04\n 415   22 2.441677e-04\n 429   24 2.663648e-04\n 433   19 2.108721e-04\n 437   16 1.775765e-04\n 439   42 4.661384e-04\n 444   20 2.219707e-04\n 448   24 2.663648e-04\n 449   21 2.330692e-04\n 458   23 2.552663e-04\n 466   21 2.330692e-04\n 469   17 1.886751e-04\n 474   17 1.886751e-04\n 484   20 2.219707e-04\n 494   19 2.108721e-04\n 500   22 2.441677e-04\n 504   22 2.441677e-04\n 515   62 6.881090e-04\n 525   22 2.441677e-04\n 530   23 2.552663e-04\n 531   23 2.552663e-04\n 537   13 1.442809e-04\n 547   22 2.441677e-04\n 551   17 1.886751e-04\n 554   19 2.108721e-04\n 557   43 4.772369e-04\n 560   24 2.663648e-04\n 565   20 2.219707e-04\n\n\nHoy sí podemos hacer nuestras variables dentro de cada entidad federativa\n\nconcentradohogar %&lt;&gt;%\n  group_by(ent) %&gt;% \n  mutate(quintil2=dineq::ntiles.wtd(ing_cor, n=5, weights=factor)) %&gt;% \n  ungroup()\n\n¿Discreparán muchos los hogares en sus distribuciones a nivel nacional y por entidad?\n\nconcentradohogar %&gt;% \n  tabyl(quintil1,quintil2) %&gt;% \n  adorn_totals(c(\"row\", \"col\"))\n\n quintil1     1     2     3     4     5 Total\n        1 15746  3086   168     0     0 19000\n        2  4888  9425  3785   320     0 18418\n        3   119  5936  8122  3712    44 17933\n        4     0   304  5628  9191  2621 17744\n        5     0     0     0  3731 13276 17007\n    Total 20753 18751 17703 16954 15941 90102\n\n\nY si queremos este tabulado más bonito\n\nconcentradohogar %&gt;% \n  tabyl(quintil1,quintil2) %&gt;% \n  adorn_totals(c(\"row\", \"col\")) %&gt;% \n  gt()\n\n\n\n\n\n  \n    \n      quintil1\n      1\n      2\n      3\n      4\n      5\n      Total\n    \n  \n  \n    1\n15746\n3086\n168\n0\n0\n19000\n    2\n4888\n9425\n3785\n320\n0\n18418\n    3\n119\n5936\n8122\n3712\n44\n17933\n    4\n0\n304\n5628\n9191\n2621\n17744\n    5\n0\n0\n0\n3731\n13276\n17007\n    Total\n20753\n18751\n17703\n16954\n15941\n90102\n  \n  \n  \n\n\n\n\nconcentradohogar %&gt;%\ntabyl(quintil1,quintil2) %&gt;%\nadorn_totals(c(\"row\", \"col\")) %&gt;% \ngt() %&gt;% \ntab_header( title = md(\"Distribución de los hogares en **México**\"),\n            subtitle = md(\"Según quintiles y *quintiles*\")) %&gt;%\ntab_footnote( footnote = paste(get_label(concentradohogar\\$ing_cor)))\n\n5.7.1 is.na y sus primos\nSi intentamos por ejemplo hacer un filtro para quitar los valores perdidos, no se puede hacer con var==NA\nHay un operador especial para decirnos si un valor es perdido o no.\n\nvector&lt;-c(1:5, NA, sqrt(-1), 5/0, -5/0)\n\nWarning in sqrt(-1): Se han producido NaNs\n\nvector\n\n[1]    1    2    3    4    5   NA  NaN  Inf -Inf\n\n\n\nis.na(vector)\n\n[1] FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE FALSE FALSE\n\n\n\nis.nan(vector)\n\n[1] FALSE FALSE FALSE FALSE FALSE FALSE  TRUE FALSE FALSE\n\n\n\nis.infinite(vector)\n\n[1] FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE\n\n\nComo son condiciones, funcionan como filtros, esto es útil para quitarnos algunos valores perdidos de análisis\n\nconcentradohogar %&gt;% \n  filter(!is.na(ing_cor)) # no hay perdidos, hay 0\n\n# A tibble: 90,102 × 132\n   folioviv  foliohog ubica_geo tam_loc est_socio est_dis upm   factor clase_hog\n   &lt;chr&gt;     &lt;chr&gt;    &lt;chr&gt;     &lt;chr&gt;   &lt;chr&gt;     &lt;chr&gt;   &lt;chr&gt;  &lt;dbl&gt;     &lt;dbl&gt;\n 1 01000050… 1        01001     1       4         003     0000…    206         3\n 2 01000050… 1        01001     1       4         003     0000…    206         2\n 3 01000050… 1        01001     1       4         003     0000…    206         2\n 4 01000120… 1        01001     1       3         002     0000…    167         3\n 5 01000120… 2        01001     1       3         002     0000…    167         1\n 6 01000120… 1        01001     1       3         002     0000…    167         2\n 7 01000120… 1        01001     1       3         002     0000…    167         2\n 8 01000193… 1        01001     1       4         003     0000…    212         1\n 9 01000193… 1        01001     1       4         003     0000…    212         2\n10 01000193… 1        01001     1       4         003     0000…    212         2\n# ℹ 90,092 more rows\n# ℹ 123 more variables: sexo_jefe &lt;dbl&gt;, edad_jefe &lt;dbl&gt;, educa_jefe &lt;chr&gt;,\n#   tot_integ &lt;dbl&gt;, hombres &lt;dbl&gt;, mujeres &lt;dbl&gt;, mayores &lt;dbl&gt;,\n#   menores &lt;dbl&gt;, p12_64 &lt;dbl&gt;, p65mas &lt;dbl&gt;, ocupados &lt;dbl&gt;,\n#   percep_ing &lt;dbl&gt;, perc_ocupa &lt;dbl&gt;, ing_cor &lt;dbl&gt;, ingtrab &lt;dbl&gt;,\n#   trabajo &lt;dbl&gt;, sueldos &lt;dbl&gt;, horas_extr &lt;dbl&gt;, comisiones &lt;dbl&gt;,\n#   aguinaldo &lt;dbl&gt;, indemtrab &lt;dbl&gt;, otra_rem &lt;dbl&gt;, remu_espec &lt;dbl&gt;, …"
  },
  {
    "objectID": "P5.html#at-muchas-operaciones-de-dplyr",
    "href": "P5.html#at-muchas-operaciones-de-dplyr",
    "title": "5  Ponderación y otros",
    "section": "5.8 _at muchas operaciones de {dplyr}",
    "text": "5.8 _at muchas operaciones de {dplyr}\nEste es un sufijo que funciona en algunos verbos de {dplyr} y permite hacer una operación en varias variables al mismo tiempo, funciona con vars()\n\n5.8.1 dplyr::mutate_at()\n\nconcentradohogar %&gt;% \n  dplyr::mutate_at(vars(clase_hog, sexo_jefe), ~ as_label(.x)) %&gt;% # ojo con la coma y con el punto\n  tabyl(clase_hog, sexo_jefe)\n\n    clase_hog Hombre Mujer\n  unipersonal   6519  5367\n      nuclear  41919 13621\n     ampliado  12898  8888\n    compuesto    372   211\n corresidente    197   110\n\n\n\n\n5.8.2 dplyr::rename_at()\nPrimero revisemos la opción paste y paste0\n\npaste(\"a\",\"b\", sep=\"_\")\n\n[1] \"a_b\"\n\npaste(\"a\",\"b\")\n\n[1] \"a b\"\n\npaste0(\"a\",\"b\")\n\n[1] \"ab\"\n\n\n\nconcentradohogar %&gt;% \n  dplyr::rename_at(vars(clase_hog, sexo_jefe), ~ paste0(.x, \"_\")) %&gt;% # sufijo\n  select(clase_hog_, sexo_jefe_)\n\n# A tibble: 90,102 × 2\n   clase_hog_ sexo_jefe_\n        &lt;dbl&gt;      &lt;dbl&gt;\n 1          3          2\n 2          2          1\n 3          2          1\n 4          3          1\n 5          1          1\n 6          2          1\n 7          2          2\n 8          1          2\n 9          2          2\n10          2          1\n# ℹ 90,092 more rows\n\n\n\nconcentradohogar %&gt;% \n  dplyr::rename_at(vars(clase_hog, sexo_jefe), ~ paste0(\"desc_\", .x)) %&gt;% # prefijo\n  select(starts_with(\"desc\"))\n\n# A tibble: 90,102 × 2\n   desc_clase_hog desc_sexo_jefe\n            &lt;dbl&gt;          &lt;dbl&gt;\n 1              3              2\n 2              2              1\n 3              2              1\n 4              3              1\n 5              1              1\n 6              2              1\n 7              2              2\n 8              1              2\n 9              2              2\n10              2              1\n# ℹ 90,092 more rows"
  },
  {
    "objectID": "P5.html#descriptivos-para-variables-cuantitativas",
    "href": "P5.html#descriptivos-para-variables-cuantitativas",
    "title": "5  Ponderación y otros",
    "section": "5.9 Descriptivos para variables cuantitativas",
    "text": "5.9 Descriptivos para variables cuantitativas\nVamos a empezar a revisar los gráficos para variables cuantitativas.\n\nconcentradohogar %&gt;% \n  dplyr::summarise_at(vars(contains(\"ing\")), ~ mean(.x)) # las funciones también pueden tener atributos\n\n# A tibble: 1 × 4\n  percep_ing ing_cor ingtrab otros_ing\n       &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;     &lt;dbl&gt;\n1       2.26  61490.  40360.      50.9"
  },
  {
    "objectID": "P6.html#paquetes",
    "href": "P6.html#paquetes",
    "title": "6  Análisis descriptivo II",
    "section": "6.1 Paquetes",
    "text": "6.1 Paquetes\nVamos a llamar algunas paquetes que nos ayudarán en esta práctica\n\nif (!require(\"pacman\")) install.packages(\"pacman\") # instala pacman si se requiere\n\nCargando paquete requerido: pacman\n\npacman::p_load(tidyverse,\n               writexl, \n               haven,\n               sjlabelled, \n               janitor,\n               magrittr,\n               GGally,\n               wesanderson,\n               RColorBrewer,\n               viridis,\n               ggthemes,\n               esquisse\n)"
  },
  {
    "objectID": "P6.html#datos",
    "href": "P6.html#datos",
    "title": "6  Análisis descriptivo II",
    "section": "6.2 Datos",
    "text": "6.2 Datos\nE importamos la base e incluimos los cambios anteriores\n\netiqueta_sex&lt;-c(\"Hombre\", \"Mujer\")\n\nconcentradohogar &lt;- haven::read_dta(\"datos/concentradohogar.dta\")  %&gt;% \n  mutate(sexo_jefe=as.numeric(sexo_jefe)) %&gt;% # para quitar el \"string\"\n  sjlabelled::set_labels(sexo_jefe, labels=etiqueta_sex) %&gt;% \n  mutate(clase_hog=as.numeric(clase_hog)) %&gt;% # para quitar el \"string\"\n  sjlabelled::set_labels(clase_hog, labels=c(\"unipersonal\",\n                                             \"nuclear\", \n                                             \"ampliado\",\n                                             \"compuesto\",\n                                             \"corresidente\")) %&gt;% \n  mutate(educa_jefe=as.numeric(educa_jefe)) %&gt;% \n  set_labels(educa_jefe,\n             labels=c(\"Sin instrucción\", \n                      \"Preescolar\",\n                      \"Primaria incompleta\",\n                      \"Primaria completa\",\n                      \"Secundaria incompleta\",\n                      \"Secundaria completa\",\n                      \"Preparatoria incompleta\",\n                      \"Preparatoria completa\",\n                      \"Profesional incompleta\",\n                      \"Profesional completa\",\n                      \"Posgrado\")) %&gt;% \n  mutate(educa_jefe=as.numeric(educa_jefe)) %&gt;% \n  set_labels(educa_jefe,\n             labels=c(\"Sin instrucción\", \n                      \"Preescolar\",\n                      \"Primaria incompleta\",\n                      \"Primaria completa\",\n                      \"Secundaria incompleta\",\n                      \"Secundaria completa\",\n                      \"Preparatoria incompleta\",\n                      \"Preparatoria completa\",\n                      \"Profesional incompleta\",\n                      \"Profesional completa\",\n                      \"Posgrado\")) %&gt;% \n    mutate(ent=stringr::str_sub(ubica_geo, \n                                start = 1,\n                                end = 2 ))"
  },
  {
    "objectID": "P6.html#descriptivos-para-variables-cuantitativas",
    "href": "P6.html#descriptivos-para-variables-cuantitativas",
    "title": "6  Análisis descriptivo II",
    "section": "6.3 Descriptivos para variables cuantitativas",
    "text": "6.3 Descriptivos para variables cuantitativas\nVamos a empezar a revisar los gráficos para variables cuantitativas.\n\n6.3.1 Medidas numéricas básicas\n5 números\n\nsummary(concentradohogar$ing_cor) ## ingresos\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n      0   28386   46074   61490   74344 7153770 \n\n\nCon pipes se pueden crear “indicadores” de nuestras variables es un tibble, tal como lo hicimos con el diseño complejo\n\nconcentradohogar %&gt;% \n  dplyr::summarise(nombre_indicador=mean(ing_cor, na.rm=T)) # las funciones también pueden tener atributos\n\n# A tibble: 1 × 1\n  nombre_indicador\n             &lt;dbl&gt;\n1           61490.\n\n\nFunciona con group_by() y con .by()\n\nconcentradohogar %&gt;% \n  dplyr::summarise(nombre_indicador=mean(ing_cor, na.rm=T), .by=ent) # las funciones también pueden tener atributos\n\n# A tibble: 32 × 2\n   ent   nombre_indicador\n   &lt;chr&gt;            &lt;dbl&gt;\n 1 01              73162.\n 2 02              80341.\n 3 03              87777.\n 4 04              57921.\n 5 05              69761.\n 6 06              63841.\n 7 07              40765.\n 8 08              73981.\n 9 09              77909.\n10 10              53608.\n# ℹ 22 more rows\n\n\n\nconcentradohogar %&gt;% \n  dplyr::summarise_at(vars(contains(\"ing\")), ~ mean(.x)) # las funciones también pueden tener atributos\n\n# A tibble: 1 × 4\n  percep_ing ing_cor ingtrab otros_ing\n       &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;     &lt;dbl&gt;\n1       2.26  61490.  40360.      50.9\n\n\n\n\n6.3.2 Gráficas básicas\n\nhist(concentradohogar$ing_cor)\n\n\n\nboxplot(concentradohogar$ing_cor)\n\n\n\n\nLe podemos modificar el título del eje de las x y de las y\n\nhist(concentradohogar$ing_cor, \n     main=\"Histograma de los ingresos corrientes\", \n     xlab=\"pesos mexicanos\", ylab=\"Frecuencia\") \n\n\n\n\n¡A ponerle colorcitos! Aquí hay una lista https://r-charts.com/es/colores/\n\nhist(concentradohogar$ing_cor, \n     main=\"Histograma de los ingresos corrientes\", \n     xlab=\"pesos mexicanos\", ylab=\"Frecuencia\",\n     col=\"deeppink1\") \n\n\n\n\nCon pipes:\n\nconcentradohogar %&gt;% \n    with(hist(ing_cor)) # con with, para que entienda\n\n\n\n\nCuando usamos pipes, se debe de recordar que no es necesario escribir el nombre del data.frame en el filtro porque es lo primero que colocamos en nuestro “pipe”.\nCheca que cualquier aditamiento debe ir en el pipe donde está el comando de hist(). Ten cuidado con los paréntesis.\n\nconcentradohogar %&gt;% \n  filter(!is.na(ing_cor)) %&gt;% # la ventaja de esta forma es que podemos hacer más operaciones\n    with(hist(ing_cor, main= \"histograma\"))"
  },
  {
    "objectID": "P6.html#intro-a-la-correlación",
    "href": "P6.html#intro-a-la-correlación",
    "title": "6  Análisis descriptivo II",
    "section": "6.4 Intro a la correlación",
    "text": "6.4 Intro a la correlación\n\nplot(concentradohogar$ing_cor, concentradohogar$gasto_mon)\n\n\n\n\n\ncor(concentradohogar$ing_cor, concentradohogar$gasto_mon)\n\n[1] 0.5339345"
  },
  {
    "objectID": "P6.html#cuál-es-el-mejor-gráfico",
    "href": "P6.html#cuál-es-el-mejor-gráfico",
    "title": "6  Análisis descriptivo II",
    "section": "6.5 ¿Cuál es el mejor gráfico?",
    "text": "6.5 ¿Cuál es el mejor gráfico?\nHay cursos específicos de visualización de datos. Es maravilloso pero también requiere que estudiemos bien qué tipo de datos tenemos y cuáles son nuestros objetivos.\nMe gusta mucho este recurso: https://www.data-to-viz.com/"
  },
  {
    "objectID": "P6.html#gráficos-de-graphics",
    "href": "P6.html#gráficos-de-graphics",
    "title": "6  Análisis descriptivo II",
    "section": "6.6 Gráficos de {graphics}",
    "text": "6.6 Gráficos de {graphics}\n“plot()” Es la función más simple. Y es otro comando “listo”\n\n  plot(as_label(concentradohogar$sexo_jefe))\n\n\n\n\nEsto es igual que:\n\nbarplot(table(as_label(concentradohogar$sexo_jefe)))"
  },
  {
    "objectID": "P6.html#gráficos-con-ggplot2",
    "href": "P6.html#gráficos-con-ggplot2",
    "title": "6  Análisis descriptivo II",
    "section": "6.7 Gráficos con {ggplot2}",
    "text": "6.7 Gráficos con {ggplot2}\nHoy vamos a presentar a un gran paquete ¡Es de los famosos! Y tiene más de diez años.\n\nhttps://qz.com/1007328/all-hail-ggplot2-the-code-powering-all-those-excellent-charts-is-10-years-old/\n\n“gg” proviene de “Grammar of Graphics”, funciona un poco como sintácticamente, de ahí su nombre.\nAlgunos recursos para aprender ggplot\n\nhttps://ggplot2-book.org/ hecha por el mero mero.\nhttp://sape.inf.usi.ch/quick-reference/ggplot2\nhttps://raw.githubusercontent.com/rstudio/cheatsheets/master/data-visualization-2.1.pdf\n\nVamos a revisar una presentación que es muy interesante\n\nhttps://evamaerey.github.io/ggplot2_grammar_guide/ggplot2_grammar_guide.html\nhttps://huygens.science.uva.nl/ggPlotteR/ Hace gráficos de ggplot con la base de datos de Gapminder"
  },
  {
    "objectID": "P6.html#un-lienzo-para-dibujar",
    "href": "P6.html#un-lienzo-para-dibujar",
    "title": "6  Análisis descriptivo II",
    "section": "6.8 Un lienzo para dibujar",
    "text": "6.8 Un lienzo para dibujar\nPara hacer un gráfico, {ggplot2} tiene el comando ggplot(). Hacer gráficos con esta función tiene una lógica aditiva. Lo ideal es que iniciemos estableciendo el mapeo estético de nuestro gráfico, con el comando aes()\n\nconcentradohogar %&gt;%\n  ggplot2::ggplot() + # ojo es un +\n  aes(x= as_label(sexo_jefe))\n\n\n\ng1&lt;-concentradohogar %&gt;%\n  ggplot2::ggplot() + # ojo es un +\n  aes(x= as_label(sexo_jefe))\n\ng1 ## imprime el lienzo"
  },
  {
    "objectID": "P6.html#gráficos-univariados",
    "href": "P6.html#gráficos-univariados",
    "title": "6  Análisis descriptivo II",
    "section": "6.9 Gráficos univariados",
    "text": "6.9 Gráficos univariados\n\n6.9.1 Para cualitativas\nSabemos que la mejor son las barras\n\ng1 +\n  geom_bar()\n\n\n\n\n\ng1 +  geom_bar(aes(\n  fill = as_label(sexo_jefe)\n  )) ## colorea la geometría\n\n\n\n## Esto es equivalente\n\nconcentradohogar %&gt;%\n  ggplot(aes(as_label(sexo_jefe),\n             fill = as_label(sexo_jefe)\n             )\n         ) + geom_bar()\n\n\n\n\n\n\n6.9.2 Para variables cuantitativas\nPodemos hacer histogramas y gráficos de densidad, de manera fácil. La idea es agregar en nuestro “lienzo” una geometría, un valor para dibujar en él. Esto se agrega con un “+” y con la figura que se añadirá a nuestro gráfico.\n\ng2&lt;-concentradohogar %&gt;%\n  ggplot(aes(ing_cor))\n\ng2 ## imprime el lienzo\n\n\n\n\n\n6.9.2.1 Histograma\n\ng2 + geom_histogram() \n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n6.9.2.2 Densidad\n\ng2 + geom_density()"
  },
  {
    "objectID": "P6.html#gráficos-bivariados",
    "href": "P6.html#gráficos-bivariados",
    "title": "6  Análisis descriptivo II",
    "section": "6.10 Gráficos bivariados",
    "text": "6.10 Gráficos bivariados\n\n6.10.1 Cuali-cuali\n\ng1 +  geom_bar(aes(fill = as_label(clase_hog)),\n              position=\"dodge\") #pone las categorías lado a lado y no apiladas\n\n\n\n\nOtra manera interesante de observar estas variables, es que estando apiladas, cada categoría de escolaridad se entendiera como una unidad:\n\ng_bivariado &lt;- g1 +  \n  geom_bar(aes(fill = as_label(clase_hog)),\n              position=\"fill\") ## cada categoría \"llena\" a una unidad\n\ng_bivariado"
  },
  {
    "objectID": "P6.html#escalas-de-color",
    "href": "P6.html#escalas-de-color",
    "title": "6  Análisis descriptivo II",
    "section": "6.11 Escalas de color",
    "text": "6.11 Escalas de color\n\n6.11.1 {RcolorBrewer}\n\nRColorBrewer::display.brewer.all()\n\n\n\n\n\ng_bivariado + scale_fill_brewer(palette = \"Dark2\")\n\n\n\n\n\n\n6.11.2 {viridis}\n\ng_bivariado + scale_fill_viridis_d()\n\n\n\n\n\n\n6.11.3 {wesanderson}\n\nwesanderson::wes_palettes\n\n$BottleRocket1\n[1] \"#A42820\" \"#5F5647\" \"#9B110E\" \"#3F5151\" \"#4E2A1E\" \"#550307\" \"#0C1707\"\n\n$BottleRocket2\n[1] \"#FAD510\" \"#CB2314\" \"#273046\" \"#354823\" \"#1E1E1E\"\n\n$Rushmore1\n[1] \"#E1BD6D\" \"#EABE94\" \"#0B775E\" \"#35274A\" \"#F2300F\"\n\n$Rushmore\n[1] \"#E1BD6D\" \"#EABE94\" \"#0B775E\" \"#35274A\" \"#F2300F\"\n\n$Royal1\n[1] \"#899DA4\" \"#C93312\" \"#FAEFD1\" \"#DC863B\"\n\n$Royal2\n[1] \"#9A8822\" \"#F5CDB4\" \"#F8AFA8\" \"#FDDDA0\" \"#74A089\"\n\n$Zissou1\n[1] \"#3B9AB2\" \"#78B7C5\" \"#EBCC2A\" \"#E1AF00\" \"#F21A00\"\n\n$Zissou1Continuous\n [1] \"#3A9AB2\" \"#6FB2C1\" \"#91BAB6\" \"#A5C2A3\" \"#BDC881\" \"#DCCB4E\" \"#E3B710\"\n [8] \"#E79805\" \"#EC7A05\" \"#EF5703\" \"#F11B00\"\n\n$Darjeeling1\n[1] \"#FF0000\" \"#00A08A\" \"#F2AD00\" \"#F98400\" \"#5BBCD6\"\n\n$Darjeeling2\n[1] \"#ECCBAE\" \"#046C9A\" \"#D69C4E\" \"#ABDDDE\" \"#000000\"\n\n$Chevalier1\n[1] \"#446455\" \"#FDD262\" \"#D3DDDC\" \"#C7B19C\"\n\n$FantasticFox1\n[1] \"#DD8D29\" \"#E2D200\" \"#46ACC8\" \"#E58601\" \"#B40F20\"\n\n$Moonrise1\n[1] \"#F3DF6C\" \"#CEAB07\" \"#D5D5D3\" \"#24281A\"\n\n$Moonrise2\n[1] \"#798E87\" \"#C27D38\" \"#CCC591\" \"#29211F\"\n\n$Moonrise3\n[1] \"#85D4E3\" \"#F4B5BD\" \"#9C964A\" \"#CDC08C\" \"#FAD77B\"\n\n$Cavalcanti1\n[1] \"#D8B70A\" \"#02401B\" \"#A2A475\" \"#81A88D\" \"#972D15\"\n\n$GrandBudapest1\n[1] \"#F1BB7B\" \"#FD6467\" \"#5B1A18\" \"#D67236\"\n\n$GrandBudapest2\n[1] \"#E6A0C4\" \"#C6CDF7\" \"#D8A499\" \"#7294D4\"\n\n$IsleofDogs1\n[1] \"#9986A5\" \"#79402E\" \"#CCBA72\" \"#0F0D0E\" \"#D9D0D3\" \"#8D8680\"\n\n$IsleofDogs2\n[1] \"#EAD3BF\" \"#AA9486\" \"#B6854D\" \"#39312F\" \"#1C1718\"\n\n$FrenchDispatch\n[1] \"#90D4CC\" \"#BD3027\" \"#B0AFA2\" \"#7FC0C6\" \"#9D9C85\"\n\n$AsteroidCity1\n[1] \"#0A9F9D\" \"#CEB175\" \"#E54E21\" \"#6C8645\" \"#C18748\"\n\n$AsteroidCity2\n[1] \"#C52E19\" \"#AC9765\" \"#54D8B1\" \"#b67c3b\" \"#175149\" \"#AF4E24\"\n\n$AsteroidCity3\n[1] \"#FBA72A\" \"#D3D4D8\" \"#CB7A5C\" \"#5785C1\"\n\n\n\nwesanderson::wes_palette(\"IsleofDogs1\", n=5)\n\n\n\nmi_paleta &lt;- wesanderson::wes_palette(\"IsleofDogs1\", n=5)\n\n\ng_bivariado + scale_fill_manual(values=mi_paleta)"
  },
  {
    "objectID": "P6.html#temas",
    "href": "P6.html#temas",
    "title": "6  Análisis descriptivo II",
    "section": "6.12 Temas",
    "text": "6.12 Temas\nCambiamos el tema:\n\ng_bivariado + scale_fill_brewer(palette = \"Dark2\") + theme_minimal()\n\n\n\n\nSi queremos que sean horizontales (como debe ser)\n\ng_bivariado + \n  scale_fill_brewer(palette = \"Dark2\") +\n  theme_minimal() +\n  coord_flip()"
  },
  {
    "objectID": "P6.html#un-atajo-esquisse",
    "href": "P6.html#un-atajo-esquisse",
    "title": "6  Análisis descriptivo II",
    "section": "6.13 Un atajo {esquisse}",
    "text": "6.13 Un atajo {esquisse}\nSi la lógica de las capas y lienzos parece un poco complicada para graficar con {ggplot2}, el paquete “esquisse” tiene un complemento. Cuando lo instalamos con pacman más arriba, se puede observar el complemento:\nHoy desde el complemento podemos acceder a el siguiente menú y seleccionar nuestra base.\n\n\n\nEn tu barra de íconos de Rstudio\n\n\nUna vez seleccionada, puedes hacer “drag and drop” de las variables y elegir el tipo de gráfico, incluso puedes hacer filtro con las variables disponibles\nPuedes exportar esto a una imagen, a Powerpoint o como código a ejecutar en RStudio. Esta herramienta es muy útil para irnos acostumbrando al código de ggplot que puede ser bastante complicado en los primeros acercamientos"
  },
  {
    "objectID": "P6.html#otro-atajo-ggally",
    "href": "P6.html#otro-atajo-ggally",
    "title": "6  Análisis descriptivo II",
    "section": "6.14 Otro atajo {GGally}",
    "text": "6.14 Otro atajo {GGally}\nDe acuerdo con sus creadores\n\n{ggplot2} es un sistema de trazado para R basado en la gramática de los gráficos. {GGally} extiende {ggplot2} agregando varias funciones para reducir la complejidad de combinar geoms con datos transformados. Algunas de estas funciones incluyen una matriz de gráficos por pares, una matriz de diagramas de dispersión, un gráfico de coordenadas paralelas, un gráfico de supervivencia y varias funciones para trazar redes.\n\nVamos a ver un par de ejemplos\n\nconcentradohogar %&gt;% \n  dplyr::select(ing_cor, gasto_mon, tot_integ) %&gt;% \n  GGally::ggpairs()\n\n\n\n\n\nconcentradohogar %&gt;% \n  dplyr::mutate_at(vars(sexo_jefe,educa_jefe), ~ as_label(.x)) %&gt;% \n  dplyr::select(ing_cor, tot_integ, sexo_jefe, educa_jefe) %&gt;% \n  GGally::ggpairs()\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\nconcentradohogar %&gt;% \n  dplyr::mutate_at(vars(sexo_jefe,educa_jefe), ~ as_label(.x)) %&gt;% \n  dplyr::select(ing_cor, gasto_mon, tot_integ, sexo_jefe) %&gt;% \n  GGally::ggpairs(columns = 1:3, # las primeras tres van en la cuadrícula\n                  ggplot2::aes(color = sexo_jefe,\n                               fill = sexo_jefe, # aquí van colores\n                               alpha = I(0.4))) # aquí la transparencia"
  },
  {
    "objectID": "P6.html#ejercicio",
    "href": "P6.html#ejercicio",
    "title": "6  Análisis descriptivo II",
    "section": "6.15 Ejercicio",
    "text": "6.15 Ejercicio\nRealiza dos gráficos.\n\nUno de una sola variable\nOtro con dos variables, el que sea de tu agrado, con las variables que te sientes cómoda o cómodo, en la base de datos de tu elección\nPuedes modificarlo usando el paquete {esquisse}.\n\nEnvía las imágenes\nEnvía el script"
  }
]